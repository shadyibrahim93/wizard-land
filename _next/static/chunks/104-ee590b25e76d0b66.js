"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[104],{104:(e,r,t)=>{t.d(r,{$K:()=>I,CI:()=>d,D9:()=>n,DL:()=>A,Dp:()=>i,Em:()=>o,FU:()=>g,Hh:()=>l,Hy:()=>z,JI:()=>S,Jv:()=>u,Kt:()=>$,ND:()=>s,O3:()=>v,PI:()=>j,TD:()=>T,WT:()=>P,Xd:()=>k,Xs:()=>U,Z5:()=>D,_J:()=>a,_z:()=>m,a$:()=>c,ab:()=>y,e5:()=>p,i4:()=>b,kN:()=>x,lj:()=>_,lu:()=>E,oH:()=>M,oI:()=>h,qk:()=>q,r7:()=>X,tw:()=>f,xZ:()=>O,xm:()=>w});let s=(0,t(851).UU)("https://rebkmllpazozwtqljvea.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJlYmttbGxwYXpvend0cWxqdmVhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxNTMxMTgsImV4cCI6MjA1NzcyOTExOH0.aLPuNXcYxCf63-E-hMP4qMmRzjADsJWXyTc5pYU7b3w");async function o(e){let{data:r,error:t}=await s.from("dropzone-shapes").select("*").eq("level",e);return t&&console.error("Error fetching dropzone shapes:",t),r}async function a(e){let{data:r,error:t}=await s.from("memory_shapes").select("*").eq("level",e);return t&&console.error("Error fetching memory shapes:",t),r}async function i(e){let{data:r,error:t}=await s.from("sequence").select("*").eq("level",e);return t&&console.error("Error fetching sequence data:",t),r}async function n(e){let{data:r,error:t}=await s.from("scramble_words").select("*").eq("level",e);return t&&console.error("Error fetching scramble data:",t),r}async function c(e){let{data:r,error:t}=await s.from("sudoku_game").select("*").eq("level",e);return t&&console.error("Error fetching sudoku data:",t),r}async function l(e){let{email:r,password:t,fullName:o}=e;if(t.length<6)return{success:!1,error:"Password must be at least 6 characters long."};let{data:a,error:i}=await s.auth.signUp({email:r,password:t,options:{data:{full_name:o}}});if(i)return"user_already_exists"===i.code||i.message&&i.message.toLowerCase().includes("user already exists")?{success:!1,error:"The email address is already in use."}:(console.error("Signup error:",i.message),{success:!1,error:i.message||"Signup error"});let n=a.user.id,{error:c}=await s.from("profiles").insert({id:n,email:r,full_name:o});if(c)return console.error("Profile insert error:",c.message),{success:!1,error:c.message||"Profile insert error"};let l=[{id:crypto.randomUUID(),user_id:n,item_id:"9a4243a1-1e76-4c7b-9a49-f1caaad9b2a2",acquired_at:new Date().toISOString(),is_active:!0},{id:crypto.randomUUID(),user_id:n,item_id:"9f61795f-0f84-43c4-a5b6-d561f53f6616",acquired_at:new Date().toISOString(),is_active:!1}],u=new Date;u<new Date("2025-06-01T00:00:00Z")&&l.push({id:crypto.randomUUID(),user_id:n,item_id:"03d4bbe6-8fa6-4de0-ae65-8c9db5f8f9b8",acquired_at:u.toISOString(),is_active:!1});let{error:d}=await s.from("user_inventory").insert(l);if(d)return console.error("Inventory insert error:",d.message),{success:!1,error:d.message||"Inventory insert error"};let{error:m}=await s.from("user_wallet").insert({user_id:n,exp:0,stars:0,euro:0});return m?(console.error("Wallet insert error:",m.message),{success:!1,error:m.message||"Wallet insert error"}):{success:!0}}async function u(e){let{email:r,password:t}=e,{data:o,error:a}=await s.auth.signInWithPassword({email:r,password:t});if(a)return console.error("Sign-in error:",a.message),null;let{data:i,error:n}=await s.from("profiles").select("full_name, env").eq("id",o.user.id).single();if(n)return console.error("Error fetching user data:",n.message),null;let{error:c}=await s.auth.updateUser({data:{full_name:i.full_name,env:i.env}});return c&&console.error("Error updating auth metadata:",c.message),{...o.user,user_metadata:{...o.user.user_metadata,full_name:i.full_name,env:i.env}}}async function d(){let{error:e}=await s.auth.signOut();e?console.error("Error signing out:",e.message):console.log("User signed out successfully")}async function m(e,r,t,o){if(!r)return void alert("Please sign in to join the community. The Magic starts here!");let{error:a}=await s.from("messages").insert([{game_chat_room_id:e,sender_id:r,sender_name:t,message:o}]);a&&console.error("Error sending message:",a)}async function _(e){let r=new Date(Date.now()-6048e5).toISOString(),{data:t,error:o}=await s.from("messages").select("id, sender_id, sender_name, message, created_at").eq("game_chat_room_id",e).gte("created_at",r).order("created_at",{ascending:!0});return o?(console.error("Error fetching messages:",o),[]):t}function g(e,r){return s.channel(`game-chat-${e}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"messages",filter:`game_chat_room_id=eq.${e}`},e=>{r(e.new)}).subscribe()}async function f(e){let{data:r,error:t}=await s.from("user_wallet").select("exp, stars").eq("user_id",e);return t?(console.error("Error fetching progress:",t),null):r}async function h(e,r,t){let{error:o}=await s.rpc("update_user_game_progress",{input_user_id:e,stars_to_add:r,exp_to_add:t});return!o||(console.error("Error updating progress:",o),!1)}async function w(e){let{data:r,error:t}=await s.from("user_wallet").select("euro").eq("user_id",e);return t?(console.error("Error fetching user wallet:",t),{euro:0}):r&&0!==r.length?r[0]:{euro:0}}async function p(e){let{data:r,error:t}=await s.from("game_rooms").select("*").eq("game_id",e).is("player2",null);return t?(console.error("Error fetching available rooms:",t),[]):r}async function y(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,{data:o,error:a}=await s.from("game_rooms").select("*").eq("game_id",e).eq("player1",r);if(a)return console.error("Error checking for existing rooms:",a),null;if(o.length>0)return o[0];let i=Math.floor(1e4+9e4*Math.random()),{data:n,error:c}=await s.from("game_rooms").insert([{player1:r,game_id:e,room:i,created_at:new Date().toISOString(),password:t||null}]).select().single();return c?(console.error("Error creating new room:",c),null):n}async function v(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",{data:o,error:a}=await s.from("game_rooms").select("*").eq("room",e).single();if(a)throw Error("Room not found");let i=String(o.password||""),n=String(t||"");if(o.password&&i!==n)throw Error("Incorrect password");let{data:c,error:l}=await s.from("game_rooms").update({player2:r}).eq("room",e).select().single();if(l)throw Error(l.message);return c}function q(e,r){return s.channel(`board-${e}`).on("postgres_changes",{event:"*",schema:"public",table:"game_state",filter:`room=eq.${e}`},e=>{r(e.new)}).subscribe()}async function E(e,r,t,o){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:5,{data:n,error:c}=await s.from("game_state").upsert([{room:e,board_state:r,game_id:t,current_turn:o,winner:a,extraShifts:i}]).eq("room",e).eq("game_id",t).select();return c?(console.error("Error updating game state:",c),null):n}let b=async(e,r)=>{let{error:t}=await s.from("game_state").delete().match({room:e,game_id:r});if(t)return console.error("Error deleting game state:",t.message),{success:!1,error:t};let{error:o}=await s.from("game_rooms").delete().match({room:e,game_id:r});return o?(console.error("Error deleting game room:",o.message),{success:!1,error:o}):{success:!0}},I=async e=>{try{let{data:r}=await s.from("game_rooms").select("room, game_id").or(`player1.eq.${e},player2.eq.${e}`);if(!r?.length)return{success:!0};let t=r.map(e=>e.room),o=[...new Set(r.map(e=>e.game_id))];return await s.from("game_state").delete().in("room",t).in("game_id",o),await s.from("game_rooms").delete().or(`player1.eq.${e},player2.eq.${e}`),{success:!0}}catch{return{success:!1}}},S=async(e,r)=>{let{error:t}=await s.from("game_state").delete().match({room:e,game_id:r});return t?(console.error("Error deleting game state:",t.message),{success:!1,error:t}):{success:!0}};function D(e,r){return s.channel(`room-${e}`).on("postgres_changes",{event:"UPDATE",schema:"public",table:"game_rooms",filter:`room=eq.${e}`},e=>{r(e.new)}).subscribe()}function $(e){e&&Array.isArray(e)&&e.forEach(e=>{try{s.removeChannel(e)}catch(e){console.error("Error unsubscribing from channel:",e)}})}async function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,{data:r,error:t}=await s.from("shop_items").select("*").eq("is_active",!0);if(t)return console.error("Error fetching shop items:",t),{};let o=new Set;if(e){let{data:r,error:t}=await s.from("user_inventory").select("item_id").eq("user_id",e);t?console.error("Error fetching user inventory:",t):o=new Set(r.map(e=>e.item_id))}let a={};return r.forEach(e=>{let r=e.type;a[r]||(a[r]=[]),a[r].push({...e,purchased:o.has(e.id)})}),Object.keys(a).forEach(e=>{a[e].sort((e,r)=>e.purchased!==r.purchased?e.purchased?1:-1:(e.stars||0)-(r.stars||0))}),a}async function O(e){let{data:r,error:t}=await s.from("user_inventory").select("*, shop_items!user_inventory_item_id_fkey(*), is_active").eq("user_id",e);if(t)return console.error("Error fetching user inventory:",t),{};let o={};return r.forEach(e=>{let r=e.shop_items;if(!r)return;let t=r.type;o[t]||(o[t]=[]),o[t].push({...r,acquired_at:e.acquired_at,inventory_id:e.id,is_active:e.is_active})}),Object.keys(o).forEach(e=>{o[e].sort((e,r)=>(e.acquired_at||0)-(r.acquired_at||0))}),o}async function T(e,r){try{let t,o,{data:a,error:i}=await s.from("shop_items").select("stars, euro").eq("id",r).single();if(i||!a)return console.error("Error fetching item details:",i),{success:!1,error:"Item not found"};let n=a.stars||a.euro||0,c=a.stars?"stars":"euro";if("stars"===c){let{data:r,error:o}=await s.from("user_wallet").select("stars").eq("user_id",e).single();if(o||!r)return console.error("Error fetching user stars:",o),{success:!1,error:"Could not fetch user data"};t=r.stars}else{let{data:r,error:o}=await s.from("user_wallet").select("euro").eq("user_id",e).single();if(o||!r)return console.error("Error fetching user wallet:",o),{success:!1,error:"Could not fetch wallet data"};t=r.euro}if(t<n)return{success:!1,error:`Not enough ${c} to purchase this item`};if(await s.rpc("update_user_wallet",{input_user_id:e,stars_to_add:"stars"===c?-n:0,euro_to_add:"euro"===c?-n:0,exp_to_add:0}),o)return console.error(`Error updating ${c} via RPC:`,o),{success:!1,error:`Failed to deduct ${c}`};let{data:l,error:u}=await s.from("user_inventory").insert([{user_id:e,item_id:r}]).select();if(u)return console.error("Error adding item to inventory:",u),"stars"===c?await s.rpc("update_user_game_progress",{input_user_id:e,stars_to_add:-n,exp_to_add:0}):await s.rpc("user_wallet",{user_id:e,euro:n}),{success:!1,error:"Failed to add item to inventory"};let d=t-n;return{success:!0,data:l,updatedBalance:d,balanceType:c}}catch(e){return console.error("Unexpected error during purchase:",e),{success:!1,error:"Unexpected error during purchase"}}}function k(e,r){let{onWalletChange:t,onStarsChange:o,onExpChange:a,onInventoryChange:i}=r;return s.channel(`user_wallet_updates_${e}`).on("postgres_changes",{event:"UPDATE",schema:"public",table:"user_wallet",filter:`user_id=eq.${e}`},e=>{let r=e.new;t&&r?.euro!==void 0&&t(r.euro),o&&r?.stars!==void 0&&o(r.stars),a&&r?.exp!==void 0&&a(r.exp),i&&r?.inventory_item&&i(r.inventory_item)}).subscribe()}async function U(e,r){let{data:t,error:o}=await s.from("user_inventory").select("id, item_id, shop_items!user_inventory_item_id_fkey(*), is_active").eq("item_id",r).eq("user_id",e).single();if(o||!t)return void console.error("Error getting selected item:",o);let a=t.shop_items.type,{data:i,error:n}=await s.from("user_inventory").select("id, item_id, shop_items!user_inventory_item_id_fkey(*), is_active").eq("user_id",e);if(n||!i)return void console.error("Error fetching inventory for deactivation:",n);let c=i.filter(e=>e.shop_items?.type===a).map(e=>e.id);if(c.length>0){let{error:e}=await s.from("user_inventory").update({is_active:!1}).in("id",c);if(e)return void console.error("Error deactivating items:",e)}let{error:l}=await s.from("user_inventory").update({is_active:!0}).eq("item_id",r).eq("user_id",e);if(l)return void console.error("Error activating item:",l);alert("Item has been successfully activated!")}let P=(e,r,t)=>s.channel(`room_updates_${e}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"game_rooms",filter:`game_id=eq.${e}`},e=>{r&&r(e.new)}).on("postgres_changes",{event:"DELETE",schema:"public",table:"game_rooms",filter:`game_id=eq.${e}`},e=>{t&&t(e.old)}).subscribe(),C=async(e,r)=>{let{data:t,error:o}=await s.from("user_progress").select("wins, losses").eq("user_id",e).eq("game_id",r).single();if(o&&"PGRST116"!==o.code)throw console.error("Error fetching progress:",o),o;return t||null},N=async(e,r)=>{let{data:t,error:o}=await s.from("user_weekly_progress").select("wins, losses").eq("user_id",e).eq("game_id",r).single();if(o&&"PGRST116"!==o.code)throw console.error("Error fetching progress:",o),o;return t||null},J=async(e,r)=>{let{data:t,error:o}=await s.from("user_monthly_progress").select("wins, losses").eq("user_id",e).eq("game_id",r).single();if(o&&"PGRST116"!==o.code)throw console.error("Error fetching progress:",o),o;return t||null},R=async(e,r)=>{let{data:t,error:o}=await s.from("user_lifetime_progress").select("wins, losses").eq("user_id",e).eq("game_id",r).single();if(o&&"PGRST116"!==o.code)throw console.error("Error fetching progress:",o),o;return t||null},z=async(e,r)=>{let t=async(t,o)=>{let a=await o(e,r);if(a){let{error:o}=await s.from(t).update({wins:a.wins+1,updated_at:new Date().toISOString()}).match({user_id:e,game_id:r});if(o)throw o}else{let{error:o}=await s.from(t).insert({user_id:e,game_id:r,wins:1,losses:0,draws:0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()});if(o)throw o}};try{await t("user_progress",C),await t("user_weekly_progress",N),await t("user_monthly_progress",J),await t("user_lifetime_progress",R)}catch(e){throw e}},M=async(e,r)=>{let t=async(t,o)=>{let a=await o(e,r);if(a){let{error:o}=await s.from(t).update({losses:a.losses+1,updated_at:new Date().toISOString()}).match({user_id:e,game_id:r});if(o)throw o}else{let{error:o}=await s.from(t).insert({user_id:e,game_id:r,wins:0,losses:1,draws:0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()});if(o)throw o}};try{await t("user_progress",C),await t("user_weekly_progress",N),await t("user_monthly_progress",J),await t("user_lifetime_progress",R)}catch(e){throw e}};function j(e,r){return s.channel(`room-thumbs-${e}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"thumbs_choices",filter:`room=eq.${e}`},e=>{r(e.new)}).subscribe()}async function X(e,r,t){let{error:o}=await s.from("thumbs_choices").insert([{room:e,user_id:r,choice:t}]);if(o)throw o}async function A(e){let{error:r}=await s.from("thumbs_choices").delete().eq("room",e);r&&console.error("Error clearing thumbs choices:",r)}}}]);